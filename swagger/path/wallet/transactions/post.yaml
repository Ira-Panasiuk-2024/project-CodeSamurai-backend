tags:
  - Transactions
summary: Create transactions
operationId: createTransactions
description: 'Create a transaction with payload'
security:
  - bearerAuth: []
requestBody:
  content:
    application/json:
      schema:
        type: object
        required:
          - date
          - type
          - categoryId
          - sum
        properties:
          _id:
            description: A unique ID for the user in the database. Automatically generated when the transaction is created.
            type: string
            example: 67cece57cf044b5afacf7749
          userId:
            description: A unique ID for the user in the database. Expected to be a valid ObjectId format string.
            pattern: '^[0-9a-fA-F]{24}$'
            type: string
            example: 67cd81343b84f810f27e521f
          date:
            description: Date of the transaction
            type: string
            format: date-time
            example: '2025-04-01T00:00:00.000Z'
          type:
            description: Type of the transaction. Expected to be 'income' or 'expense'
            type: string
            enum: ['income', 'expense']
            example: income
            default: income
          categoryId:
            description: A unique ID for the category in the database. Expected to be a valid ObjectId format string.
            pattern: '^[0-9a-fA-F]{24}$'
            type: string
            example: 680a680d4d3d230f60d30fc1
          sum:
            description: The amount of the transaction. Must be a positive number.
            type: number
            example: 15423.6
          comment:
            description: Optional comment for the transaction. Can be an empty string
            type: string
            example: Products in the supermarket
            default: ' '
responses:
  '201':
    description: Successfully created transactions!
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - transaction
            - balance
          properties:
            status:
              type: integer
              example: 201
            message:
              type: string
              example: Successfully created transactions!
            transaction:
              type: object
              $ref: ../../../components/schemas/transactions.yaml
            balance:
              type: number
              example: 54827.54
  '400':
    $ref: ../../../components/responses/400.yaml
  '401':
    $ref: ../../../components/responses/401.yaml
  '500':
    $ref: ../../../components/responses/500.yaml
