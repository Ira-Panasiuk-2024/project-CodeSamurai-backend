tags:
  - Transactions
summary: Get user's transactions with pagination and sorting
operationId: getTransactions
description: Retrieve a paginated and sorted list of transactions for the authenticated user.
security:
  - bearerAuth: []

parameters:
  - in: query
    name: page
    description: Page number for pagination
    schema:
      type: integer
      minimum: 1
      example: 1
  - in: query
    name: perPage
    description: Number of items per page
    schema:
      type: integer
      minimum: 1
      example: 10
  - in: query
    name: sortOrder
    description: Sort order of the transactions
    schema:
      type: string
      enum: [asc, desc]
      default: desc

responses:
  '200':
    description: Successfully retrieved transactions
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - transactions
            - pageInfo
          properties:
            status:
              type: integer
              example: 200

            message:
              type: string
              example: Successfully retrieved transactions

            transactions:
              type: array
              items:
                properties:
                  date:
                    description: ISO 8601 formatted date of the transaction.
                    type: string
                    format: date-time
                    example: '2025-04-01T00:00:00.000Z'
                  type:
                    description: Type of the transaction. Allowed values are 'income' or 'expense'.
                    type: string
                    enum: ['income', 'expense']
                    example: income
                    default: income
                  categoryId:
                    description: A valid MongoDB ObjectId representing the category of the transaction.
                    type: string
                    pattern: '^[0-9a-fA-F]{24}$'
                    example: 680a680d4d3d230f60d30fc1
                  sum:
                    description: The amount of the transaction. Must be a positive number.
                    type: number
                    format: float
                    example: 15423.6
                  comment:
                    description: Optional comment or note related to the transaction. Can be left empty.
                    type: string
                    example: Products in the supermarket
                    default: ' '

            pageInfo:
              type: object
              required:
                - page
                - perPage
                - totalItems
                - totalPages
                - hasNextPage
                - hasPreviousPage
              properties:
                page:
                  type: integer
                  example: 1
                perPage:
                  type: integer
                  example: 8
                totalItems:
                  type: integer
                  example: 11
                totalPages:
                  type: integer
                  example: 2
                hasNextPage:
                  type: boolean
                  example: true
                hasPreviousPage:
                  type: boolean
                  example: false
  '401':
    $ref: '../../../components/responses/401.yaml'
  '500':
    $ref: '../../../components/responses/500.yaml'
