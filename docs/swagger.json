{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Money Guard app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Money Guard App"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://project-codesamurai-backend.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Wallet",
      "description": "Wallet operations."
    },
    {
      "name": "User",
      "description": "User operations."
    },
    {
      "name": "Transactions",
      "description": "Transactions operations."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/wallet/balance": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "Get list of user's balance",
        "operationId": "getUserBalance",
        "description": "Get list of user's balance",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found a user balance!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found a user balance!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/user",
                      "type": "number",
                      "example": 1000.5
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/wallet/statistics": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "Get list of user's statistics transactions by period",
        "operationId": "getTransactionsByPeriod",
        "description": "Get list of user's statistics transactions by period",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "year",
            "schema": {
              "type": "number",
              "example": 2022
            }
          },
          {
            "in": "query",
            "name": "month",
            "schema": {
              "type": "number",
              "example": 5
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found transactions for this period!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found transactions for this period!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "totalBalance",
                        "totalIncome",
                        "totalExpense",
                        "categoryExpenses",
                        "periodType"
                      ],
                      "properties": {
                        "totalBalance": {
                          "type": "number",
                          "example": 15299.5
                        },
                        "totalIncome": {
                          "type": "number",
                          "example": 17000
                        },
                        "totalExpense": {
                          "type": "number",
                          "example": 1700.5
                        },
                        "categoryExpenses": {
                          "type": "object",
                          "example": {
                            "products": 350.5,
                            "car": 1350
                          }
                        },
                        "periodType": {
                          "type": "string",
                          "example": "past"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/wallet/transactions": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "Get list of user's transactions",
        "operationId": "getContacts",
        "description": "Get list of user's transactions",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found transactions!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found transactions!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/transactions",
                        "type": "object",
                        "required": [
                          "_id",
                          "date",
                          "type",
                          "category",
                          "sum",
                          "userId"
                        ],
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "67cece57cf044b5afacf7749"
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2025-04-01T00:00:00.000Z"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "income",
                              "expense"
                            ],
                            "example": "income"
                          },
                          "category": {
                            "type": "string",
                            "enum": [
                              "income",
                              "main expenses",
                              "products",
                              "car",
                              "self care",
                              "child care",
                              "household products",
                              "education",
                              "leisure",
                              "other expenses",
                              "entertainment"
                            ],
                            "example": "products"
                          },
                          "sum": {
                            "type": "number",
                            "example": 15423.6
                          },
                          "userId": {
                            "type": "string",
                            "example": "67cd81343b84f810f27e521f"
                          },
                          "comment": {
                            "type": "string",
                            "example": "Products in the supermarket"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "Create transactions",
        "operationId": "createTransactions",
        "description": "Create a transaction with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "_id",
                  "date",
                  "type",
                  "category",
                  "sum",
                  "userId"
                ],
                "properties": {
                  "_id": {
                    "description": "transactions's id",
                    "type": "string",
                    "example": "67cece57cf044b5afacf7749"
                  },
                  "userId": {
                    "description": "Contact's user id",
                    "type": "string",
                    "example": "67cd81343b84f810f27e521f"
                  },
                  "date": {
                    "description": "Date of the transaction",
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-04-01T00:00:00.000Z"
                  },
                  "type": {
                    "description": "Type of the transaction",
                    "type": "string",
                    "enum": [
                      "income",
                      "expense"
                    ],
                    "example": "income"
                  },
                  "category": {
                    "description": "Category of the transaction",
                    "type": "string",
                    "enum": [
                      "income",
                      "main expenses",
                      "products",
                      "car",
                      "self care",
                      "child care",
                      "household products",
                      "education",
                      "leisure",
                      "other expenses",
                      "entertainment"
                    ],
                    "example": "products"
                  },
                  "sum": {
                    "description": "Sum of the transaction",
                    "type": "number",
                    "example": 15423.6
                  },
                  "comment": {
                    "description": "Comment of the transaction",
                    "type": "string",
                    "example": "Products in the supermarket"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created transactions!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created transactions!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/transactions"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/wallet/transactions/{id}": {
      "patch": {
        "tags": [
          "Wallet"
        ],
        "summary": "Update transaction",
        "operationId": "updateTransaction",
        "description": "Update transaction with provided data",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67cece57cf044b5afacf7749"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "description": "Date of the transaction",
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-04-01T00:00:00.000Z"
                  },
                  "type": {
                    "description": "Type of the transaction",
                    "type": "string",
                    "enum": [
                      "income",
                      "expense"
                    ],
                    "example": "income"
                  },
                  "category": {
                    "description": "Category of the transaction",
                    "type": "string",
                    "enum": [
                      "income",
                      "main expenses",
                      "products",
                      "car",
                      "self care",
                      "child care",
                      "household products",
                      "education",
                      "leisure",
                      "other expenses",
                      "entertainment"
                    ],
                    "example": "products"
                  },
                  "sum": {
                    "description": "Sum of the transaction",
                    "type": "number",
                    "example": 15423.6
                  },
                  "comment": {
                    "description": "Comment of the transaction",
                    "type": "string",
                    "example": "Products in the supermarket"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully patched a user transactions!",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a user transactions!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/transactions"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Wallet"
        ],
        "summary": "Delete transaction",
        "operationId": "deleteTransactions",
        "description": "Delete transaction by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67cece57cf044b5afacf7749"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user profile by id",
        "operationId": "getUserProfileById",
        "description": "Get user profile by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67cece57cf044b5afacf7749"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched a user profile!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully fetched a user profile!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update user profile",
        "operationId": "updateUserProfile",
        "description": "Update user profile with provided data",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67cece57cf044b5afacf7749"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "User`s name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "photo": {
                    "description": "Link to user`s photo",
                    "format": "binary",
                    "type": "string",
                    "example": "https://res.cloudinary.com/dlejcfotr/image/upload/v1743263889/cl4t7hdyrzxbzxhqeh5i.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully patched a user profile!",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a user profile!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "operationId": "registerUser",
        "description": "This endpoint allows a new user to create an account by providing a name, valid email, and password. The email must be unique. Password must be at least 6 characters and no more than 64. On successful registration, the user receives their name, email, and an authentication token.",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "format": "email",
                    "example": "johnd@gmail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "format": "password",
                    "example": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login an existing user",
        "operationId": "loginUser",
        "description": "This endpoint allows an existing user to log in by providing a valid email and password. On success, it returns the user's name, email, and a JWT authentication token.",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 64,
                    "example": "sarah@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 4,
                    "maxLength": 64,
                    "example": "mySecurePassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Log out user",
        "operationId": "logoutUser",
        "description": "Ends user session by invalidating the access token. Requires valid Bearer token in the `Authorization` header.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "67cd81343b84f810f27e521f"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "example@mail.com"
          },
          "password": {
            "description": "User's password",
            "type": "string",
            "example": "pCVVJHbCsY57"
          },
          "balance": {
            "description": "User's balance",
            "type": "number",
            "example": 0,
            "default": 0
          },
          "photo": {
            "description": "Link to user`s photo",
            "format": "binary",
            "type": "string",
            "example": "https://res.cloudinary.com/dlejcfotr/image/upload/v1743263889/cl4t7hdyrzxbzxhqeh5i.jpg"
          },
          "createdAt": {
            "description": "User's creation date",
            "type": "string",
            "format": "date-time",
            "example": "2025-04-01T00:00:00.000Z"
          },
          "updatedAt": {
            "description": "User's last update date",
            "type": "string",
            "format": "date-time",
            "example": "2025-04-01T00:00:00.000Z"
          }
        }
      },
      "transactions": {
        "type": "object",
        "required": [
          "_id",
          "date",
          "type",
          "category",
          "sum",
          "userId"
        ],
        "properties": {
          "_id": {
            "description": "transactions's id",
            "type": "string",
            "example": "67cece57cf044b5afacf7749"
          },
          "userId": {
            "description": "Contact's user id",
            "type": "string",
            "example": "67cd81343b84f810f27e521f"
          },
          "date": {
            "description": "Date of the transaction",
            "type": "string",
            "format": "date-time",
            "example": "2025-04-01T00:00:00.000Z"
          },
          "type": {
            "description": "Type of the transaction",
            "type": "string",
            "enum": [
              "income",
              "expense"
            ],
            "example": "income",
            "default": "income"
          },
          "category": {
            "description": "Category of the transaction",
            "type": "string",
            "enum": [
              "income",
              "main expenses",
              "products",
              "car",
              "self care",
              "child care",
              "household products",
              "education",
              "leisure",
              "other expenses",
              "entertainment"
            ],
            "example": "products",
            "default": "products"
          },
          "sum": {
            "description": "Sum of the transaction",
            "type": "number",
            "example": 15423.6,
            "default": 0
          },
          "comment": {
            "description": "Comment of the transaction",
            "type": "string",
            "example": "Products in the supermarket",
            "default": " "
          },
          "createdAt": {
            "description": "Transaction's creation date",
            "type": "string",
            "format": "date-time",
            "example": "2025-04-01T00:00:00.000Z"
          },
          "updatedAt": {
            "description": "Transaction's last update date",
            "type": "string",
            "format": "date-time",
            "example": "2025-04-01T00:00:00.000Z"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "BadRequestError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid request data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not Found Error",
        "content": {
          "application\\json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "ConflictError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "The user already exists. Please try another one"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Something went wrong"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}